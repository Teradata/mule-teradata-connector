<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:teradata="http://www.mulesoft.org/schema/mule/teradata"
      xmlns:test="http://www.mulesoft.org/schema/mule/test"
      xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
            http://www.mulesoft.org/schema/mule/test http://www.mulesoft.org/schema/mule/test/current/mule-test.xsd
            http://www.mulesoft.org/schema/mule/teradata http://www.mulesoft.org/schema/mule/teradata/current/mule-teradata.xsd">

    <flow name="messagePerRecordOneWay">
        <teradata:stored-procedure config-ref="dbConfig" streaming="true">
            <teradata:parameterized-query>{ call getTestRecords(:resultSet1) }</teradata:parameterized-query>
            <teradata:out-param name="resultSet1" type="CURSOR"/>
        </teradata:stored-procedure>

        <!-- This is needed because foreach cannot iterator when the expression is iterable/iterator-->
        <set-payload value="#[payload.resultSet1]"/>

        <foreach>
            <test:queue name="testOut"/>
        </foreach>
    </flow>

    <flow name="defaultQueryRequestResponse">
        <teradata:stored-procedure config-ref="dbConfig" streaming="true">
            <teradata:parameterized-query>{ call getTestRecords(:resultSet1) }</teradata:parameterized-query>
            <teradata:out-param name="resultSet1" type="CURSOR"/>
        </teradata:stored-procedure>

        <set-variable variableName="records" value="#[[]]"/>

        <!-- This is needed because foreach cannot iterator when the expression is iterable/iterator-->
        <set-payload value="#[payload.resultSet1]"/>

        <foreach>
            <set-variable variableName="records" value="#[vars.records ++ payload]"/>
        </foreach>

        <set-payload value="#[vars.records]"/>
    </flow>
</mule>
