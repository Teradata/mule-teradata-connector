<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:teradata="http://www.mulesoft.org/schema/mule/teradata"
      xmlns="http://www.mulesoft.org/schema/mule/core"
      xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
            http://www.mulesoft.org/schema/mule/teradata http://www.mulesoft.org/schema/mule/teradata/current/mule-teradata.xsd">

    <flow name="select">
        <teradata:select config-ref="dbConfig">
            <teradata:sql>select * from PLANET order by ID</teradata:sql>
        </teradata:select>
    </flow>

    <flow name="selectWithNullParams">
        <teradata:select config-ref="dbConfig">
            <teradata:sql>select * from PLANET order by ID</teradata:sql>
            <teradata:input-parameters>
                #[null]
            </teradata:input-parameters>
        </teradata:select>
    </flow>

    <flow name="fixedParam">
        <teradata:select config-ref="dbConfig">
            <teradata:sql>SELECT * FROM PLANET WHERE PLANET_POS = 4</teradata:sql>
        </teradata:select>
    </flow>

    <flow name="expressionAndFixedParamMixed">
        <set-variable variableName="planet_pos" value="3"/>
        <teradata:select config-ref="dbConfig">
            <teradata:sql>#["SELECT * FROM PLANET WHERE PLANET_POS = $(vars.planet_pos) AND NAME = 'Earth'"]</teradata:sql>
        </teradata:select>
    </flow>

    <flow name="dynamicQuery">
        <set-variable variableName="tableName" value="PLANET"/>
        <teradata:select config-ref="dbConfig">
            <teradata:sql>#["select * from $(vars.tableName) order by ID"]</teradata:sql>
        </teradata:select>
    </flow>

    <flow name="selectMaxRows">
        <teradata:select config-ref="dbConfig" maxRows="2">
            <teradata:sql>select * from PLANET order by ID</teradata:sql>
        </teradata:select>
    </flow>

    <flow name="emptyResult">
        <teradata:select config-ref="dbConfig">
            <teradata:sql>select * from SPACESHIP order by ID</teradata:sql>
        </teradata:select>
        <foreach>
            <logger message="#[payload]" />
        </foreach>
    </flow>

    <flow name="selectParameterizedQuery">
        <teradata:select config-ref="dbConfig">
            <teradata:sql>select * from PLANET where name = :name</teradata:sql>
            <teradata:input-parameters>
                #[{'name' : payload}]
            </teradata:input-parameters>
        </teradata:select>
    </flow>


    <flow name="selectNestedQuery">
        <teradata:select config-ref="dbConfig">
            <teradata:sql>SELECT COUNT(PLANET.ID) AS TOTAL FROM PLANET WHERE (NOT EXISTS (SELECT ID FROM PLANET WHERE 0 > PLANET.ID))</teradata:sql>
        </teradata:select>
    </flow>

    <flow name="selectDoubleNestedQuery">
        <teradata:select config-ref="dbConfig">
            <teradata:sql>SELECT COUNT(PLANET.ID) AS TOTAL FROM PLANET WHERE (NOT EXISTS (SELECT ID FROM PLANET WHERE 0 > PLANET.ID)) AND (EXISTS (SELECT NAME FROM PLANET WHERE PLANET.ID > 0))</teradata:sql>
        </teradata:select>
    </flow>

    <flow name="selectNestedParametrizedFirstQuery">
        <teradata:select config-ref="dbConfig">
            <teradata:sql>SELECT COUNT(PLANET.ID) AS TOTAL FROM PLANET WHERE PLANET.NAME = :planetName AND (NOT EXISTS (SELECT ID FROM PLANET WHERE 0 > PLANET.ID))</teradata:sql>
            <teradata:input-parameters>
                #[{'planetName' : 'Venus'}]
            </teradata:input-parameters>
        </teradata:select>
    </flow>

    <flow name="selectNestedParametrizedSecondQuery">
        <set-payload value="Mars"/>
        <teradata:select config-ref="dbConfig">
            <teradata:sql>SELECT COUNT(PLANET.ID) AS TOTAL FROM PLANET WHERE (NOT EXISTS (SELECT ID FROM PLANET WHERE 0 > PLANET.ID)) AND PLANET.NAME = :planetName</teradata:sql>
            <teradata:input-parameters>
                #[{'planetName' : payload}]
            </teradata:input-parameters>
        </teradata:select>
    </flow>

    <flow name="usesAlias">
        <teradata:select config-ref="dbConfig">
            <teradata:sql>select name as planetName from PLANET order by ID</teradata:sql>
        </teradata:select>
    </flow>

    <flow name="invalidQueryType">
        <teradata:select config-ref="dbConfig">
            <teradata:sql>I dunno SQL</teradata:sql>
        </teradata:select>
        <set-payload value="#[payload[0]]" />
    </flow>

    <flow name="badSqlSyntax">
        <teradata:select config-ref="dbConfig">
            <teradata:sql>SELECT FROM PLANETS col1, col2</teradata:sql>
        </teradata:select>
        <set-payload value="#[payload[0]]" />
    </flow>

</mule>
