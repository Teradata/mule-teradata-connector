<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns="http://www.mulesoft.org/schema/mule/core"
	  xmlns:teradata="http://www.mulesoft.org/schema/mule/teradata"
	  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	  xmlns:munit="http://www.mulesoft.org/schema/mule/munit"
	  xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	  xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
        http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
        http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd
		http://www.mulesoft.org/schema/mule/teradata http://www.mulesoft.org/schema/mule/teradata/current/mule-teradata.xsd">

	<munit:config name="arrays-and-structs-oracle-test-case.xml">
		<munit:parameterizations>
			<munit:parameterization name="oracleDbConfigOneConnection">
				<munit:parameters>
					<munit:parameter propertyName="config" value="oracleDbConfigWithoutPoolingProfile"/>
				</munit:parameters>
			</munit:parameterization>
		</munit:parameterizations>
	</munit:config>

	<munit:before-suite name="prepareEverything">
		<teradata:execute-ddl config-ref="${config}">
			<teradata:sql>create or replace type TEST_STRUCT as object (field1 varchar2(3), field2 number(2), field3 varchar2(60))</teradata:sql>
		</teradata:execute-ddl>
		<teradata:execute-ddl config-ref="${config}">
			<teradata:sql>create or replace type TEST_STRUCT_COLLECTION as table of TEST_STRUCT</teradata:sql>
		</teradata:execute-ddl>
		<teradata:execute-ddl config-ref="${config}">
			<teradata:sql><![CDATA[
create or replace procedure retain_first_struct (z in out TEST_STRUCT_COLLECTION)
    IS
begin
    if z is not null and z.count > 1 then
        z := TEST_STRUCT_COLLECTION(z(1));
    end if;
end;
]]></teradata:sql>
		</teradata:execute-ddl>
	</munit:before-suite>

	<munit:test name="prepareArrayAndStruct" ignore="#[java!org::mule::extension::teradata::DbMunitUtils::isTestIgnored('oracle')]">
		<munit:execution>
			<set-variable value="#[teradata::prepareArray('TEST_STRUCT_COLLECTION', [ teradata::prepareStruct('TEST_STRUCT', ['hi', 1, 'bye']), teradata::prepareStruct('TEST_STRUCT', ['hi2', 2, 'bye2']) ])]" variableName="list"/>

			<teradata:stored-procedure config-ref="${config}" inOutParameters='#[{ "list": vars.list }]'>
				<teradata:sql >call retain_first_struct(:list)</teradata:sql>
			</teradata:stored-procedure>
		</munit:execution>

		<munit:validation>
			<munit-tools:assert-equals actual="#[payload.list[0][1]]" expected="#[1]"/>
		</munit:validation>
	</munit:test>

	<munit:test name="preparedStructsInsideNormalArray" ignore="#[java!org::mule::extension::teradata::DbMunitUtils::isTestIgnored('oracle')]">
		<munit:execution>
			<set-variable value="#[ [teradata::prepareStruct('TEST_STRUCT', ['hi', 1, 'bye']), teradata::prepareStruct('TEST_STRUCT', ['hi2', 2, 'bye2'])] ]" variableName="list"/>

			<teradata:stored-procedure config-ref="${config}" inOutParameters='#[{ "list": vars.list }]'>
				<teradata:sql >call retain_first_struct(:list)</teradata:sql>
			</teradata:stored-procedure>
		</munit:execution>

		<munit:validation>
			<munit-tools:assert-equals actual="#[payload.list[0][1]]" expected="#[1]"/>
		</munit:validation>
	</munit:test>

	<munit:after-suite name="dropStuff">
		<try>
			<teradata:execute-script config-ref="${config}">
				<teradata:sql>
					drop procedure retain_first_struct;
					drop type TEST_STRUCT_COLLECTION;
					drop type TEST_STRUCT;
				</teradata:sql>
			</teradata:execute-script>
			<error-handler>
				<on-error-continue logException="false"/>
			</error-handler>
		</try>
	</munit:after-suite>

</mule>
