<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
	<munit:config name="stored-procedure-test-case.xml" minMuleVersion="4.3.0"/>
	<munit:before-test name="stored-procedure-test-caseBefore_Suite">
		<flow-ref name="StoreProcedureSetup"/>
	</munit:before-test>
	<munit:test name="storedProcedureInsertItemTestCase">
		<munit:execution >
			<db:stored-procedure config-ref="dbConfigMySQL">
				<db:sql ><![CDATA[{ call insertFlight(:start, :destination) }]]></db:sql>
				<db:input-parameters ><![CDATA[#[{'start': "IT", 'destination': "FR"}]]]></db:input-parameters>
			</db:stored-procedure>
		</munit:execution>
		<munit:validation >
			<db:select config-ref="dbConfigMySQL">
				<db:sql ><![CDATA[SELECT * FROM flights;]]></db:sql>
			</db:select>
			<ee:transform>
				<ee:message >
					<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
				</ee:message>
			</ee:transform>
			<munit-tools:assert-equals actual="#[payload.destination[0]]" expected='#["FR"]'/>
			<munit-tools:assert doc:name="Assert expression" doc:id="6c584f99-fa98-4323-8272-61217cc3815a" >
				<munit-tools:that ><![CDATA[#[import * from dw::test::Asserts 
 ---
attributes[0] must beOneOf(["UPPERCASE"])]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="storedProcedureSelectItemTestCase">
		<munit:behavior >
			<flow-ref name="SimpleCaseSetupFlow"/>
		</munit:behavior>
		<munit:execution >
			<db:stored-procedure config-ref="dbConfigMySQL">
				<db:sql ><![CDATA[{ call selectFlight(:destination) }]]></db:sql>
				<db:input-parameters ><![CDATA[#[{'destination': 'BR'}]]]></db:input-parameters>
			</db:stored-procedure>
		</munit:execution>
		<munit:validation >
			<ee:transform>
				<ee:message >
					<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
				</ee:message>
			</ee:transform>
			<munit-tools:assert-equals actual="#[payload.resultSet1.destination[0]]" expected="#['BR']"/>
		</munit:validation>
	</munit:test>
	<munit:test name="storedProcedureUpdateItemTestCase" >
		<munit:behavior >
			<flow-ref name="SimpleCaseSetupFlow"/>
		</munit:behavior>
		<munit:execution >
			<db:stored-procedure config-ref="dbConfigMySQL">
				<db:sql ><![CDATA[{ call updateFlight(:start, :destination) }]]></db:sql>
				<db:input-parameters ><![CDATA[#[{'start': 'AR', 'destination': 'BR'}]]]></db:input-parameters>
			</db:stored-procedure>
		</munit:execution>
		<munit:validation >
			<db:select config-ref="dbConfigMySQL">
				<db:sql ><![CDATA[SELECT * FROM flights where destination = 'BR';]]></db:sql>
			</db:select>
			<ee:transform >
				<ee:message >
					<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
				</ee:message>
			</ee:transform>
			<munit-tools:assert-equals actual="#[payload.start[0]]" expected="#['AR']"/>
		</munit:validation>
	</munit:test>
	<munit:test name="storedProcedureDeleteItemTestCase" >
		<munit:behavior >
			<flow-ref name="ComplexCaseSetup"/>
		</munit:behavior>
		<munit:execution >
			<db:stored-procedure config-ref="dbConfigMySQL">
				<db:sql ><![CDATA[{ call deleteFlight(:destination) }]]></db:sql>
				<db:input-parameters ><![CDATA[#[{'destination': 'CL'}]]]></db:input-parameters>
			</db:stored-procedure>
		</munit:execution>
		<munit:validation >
			<db:select config-ref="dbConfigMySQL">
				<db:sql ><![CDATA[SELECT * FROM flights;]]></db:sql>
			</db:select>
			<ee:transform >
				<ee:message >
					<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
				</ee:message>
			</ee:transform>
			<munit-tools:assert-equals actual="#[sizeOf(payload)]" expected="#[2]"/>
		</munit:validation>
	</munit:test>
	<munit:after-test name="stored-procedure-test-caseAfter_Test">
		<flow-ref name="DropFlightsTable"/>
	</munit:after-test>

</mule>
